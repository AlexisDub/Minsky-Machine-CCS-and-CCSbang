{"id":null,"title":"Untitled Project","ccs":"* ============================================================\r\n* Minsky Machine CCS!\r\n* ============================================================\r\n\r\n* Registres \r\nZ1 = zero1.Z1 + inc1.( (O1 | x1.ack.Z1) \\ {x1} );\r\nO1 = dec1.ack.Z1 + inc1.( (E1 | y1.ack.O1) \\ {y1} );\r\nE1 = dec1.ack.O1 + inc1.( (O1 | x1.ack.E1) \\ {x1} );\r\n\r\nZ2 = zero2.Z2 + inc2.( (O2 | x2.ack.Z2) \\ {x2} );\r\nO2 = dec2.ack.Z2 + inc2.( (E2 | y2.ack.O2) \\ {y2} );\r\nE2 = dec2.ack.O2 + inc2.( (O2 | x2.ack.E2) \\ {x2} );\r\n\r\n* Instructions\r\nInst1 = inc1.Inst2;\r\nInst2 = inc1.Inst3;\r\nInst3 = dec1.ack.Inst4 + zero1.End;\r\nInst4 = dec2.ack.Inst3 + zero2.Inst3;\r\nEnd = w.0;            \r\n\r\n* ==== Encodage de la r√©plication !C1 et !C2 ====\r\nD_Z1 = tau.( Z1 | D_Z1 );\r\nD_Z2 = tau.( Z2 | D_Z2 );\r\n\r\nSystem = Inst1 | D_Z1 | D_Z2;\r\n\r\n\r\n","properties":[{"className":"HML","status":0,"options":{"process":"End","definitions":"X min= <w>tt or <->X;","topFormula":"X;","comment":""}}],"inputMode":"CCS"}